// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	authentity "e-commerce/domains/auth/entity"

	mock "github.com/stretchr/testify/mock"
)

// AuthRepoMock is an autogenerated mock type for the IrepoAuth type
type AuthRepoMock struct {
	mock.Mock
}

// SelectUserByEmail provides a mock function with given fields: email
func (_m *AuthRepoMock) SelectUserByEmail(email string) (authentity.AuthEntity, error) {
	ret := _m.Called(email)

	var r0 authentity.AuthEntity
	if rf, ok := ret.Get(0).(func(string) authentity.AuthEntity); ok {
		r0 = rf(email)
	} else {
		r0 = ret.Get(0).(authentity.AuthEntity)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAuthRepoMock interface {
	mock.TestingT
	Cleanup(func())
}

// NewAuthRepoMock creates a new instance of AuthRepoMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAuthRepoMock(t mockConstructorTestingTNewAuthRepoMock) *AuthRepoMock {
	mock := &AuthRepoMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
